#!/usr/bin/env python
# Messy due to being done in a hurry

from distutils.version import LooseVersion
 
import datetime, sys, socket, re, binascii, workerpool
 
IP_PAT = re.compile("^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$")
IPS = []
IPS_DONE = []
DATA = {'ALIVE': 0, 'DEAD': 0, 'FILE': 0}
 
FILE_INPUT = raw_input('Enter a file location (Example: list.txt): ') or None
 
if FILE_INPUT is None:
    sys.exit('Invalid file')
 
try:
    with open(FILE_INPUT, 'r') as f:
        pass
except:
    sys.exit('File does not exist.')
 
 
def update():
    global DATA
    sys.stdout.write("\rFound: %(ALIVE)s - Dead: %(DEAD)s - In File: %(FILE)s" % DATA)
    sys.stdout.flush()
 
 
class Checker(workerpool.Job):
    ip = None
 
    def __init__(self, ip):
        super(Checker, self).__init__()
        self.ip = str(ip).strip()
 
    def check_version(self, version):
        return LooseVersion('4.2.5') >= version
 
    def run(self):
        global IPS, IPS_DONE, DATA
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.settimeout(3)
 
        if (DATA['ALIVE'] + DATA['DEAD']) % 10:
            update()
 
        try:
            s.connect((self.ip, 123))
            s.send(binascii.unhexlify("160200010000000000000000"))
            if self.check_version(
                    LooseVersion(re.search('\s([\d|\.|p|r|a]+)[@| |\-|\"]', s.recv(1024)).group(1))) is True:
                IPS_DONE.append(self.ip + "\n")
                DATA['ALIVE'] += 1
                return True
        except:
            DATA['DEAD'] += 1
            return False
 
        DATA['DEAD'] += 1
        s.close()
 
 
with open(FILE_INPUT, 'r') as f:
    lines = f.readlines()
    for ip in lines:
        ip = ip.strip()
 
        if IP_PAT.match(ip) and ip not in IPS:
            IPS.append(ip)
 
DATA['FILE'] = len(IPS)
 
print 'Found %d IPS in file.' % DATA['FILE']
print
 
pool = None
 
try:
    pool = workerpool.WorkerPool(size=240)
 
    for ip in IPS:
        pool.put(Checker(ip))
 
finally:
    pool.shutdown()
    pool.wait()
 
fileName = 'NTP-LIST-%s.txt' % datetime.datetime.now().strftime('%Y-%m-%d-%H-%M-%p')
 
print
print
 
print 'Saved:', fileName
 
with open(fileName, 'w+') as f:
    f.writelines(IPS_DONE)
